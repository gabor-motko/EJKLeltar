<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gpl-logo" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>